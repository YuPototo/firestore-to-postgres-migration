rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is the author of a post
    function isAuthor(post) {
      return isAuthenticated() && request.auth.uid == post.authorId;
    }
    
    // Posts collection rules
    match /posts/{postId} {
      // Allow read access to all authenticated users
      allow read: if isAuthenticated();
      
      // Allow create if user is authenticated
      allow create: if isAuthenticated() 
        && request.resource.data.authorId == request.auth.uid
        && request.resource.data.authorEmail == request.auth.token.email;
      
      // Allow update and delete only if user is the author
      allow update, delete: if isAuthor(resource.data);
    }
    
    // Posts counter rules
    match /counters/posts {
      allow read: if true;
      // This should be handled by Cloud Functions
      // but for this POC, we'll allow it
      allow write: if isAuthenticated();
    }

    // Comments collection rules
    match /comments/{commentId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthor(resource.data);
    }
  }
} 